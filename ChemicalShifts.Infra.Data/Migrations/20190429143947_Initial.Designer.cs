// <auto-generated />
using System;
using ChemicalShifts.Infra.Data.Root;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChemicalShifts.Infra.Data.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20190429143947_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChemicalShifts.Domain.Entities.AcademicArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AcceptedDate");

                    b.Property<DateTime>("Altered");

                    b.Property<string>("Authors");

                    b.Property<string>("Calibration");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("Key");

                    b.Property<string>("Link");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime?>("PublishDate");

                    b.Property<DateTime?>("PublishedDate");

                    b.Property<DateTime?>("RevisedDate");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("AcademicArticles");
                });

            modelBuilder.Entity("ChemicalShifts.Domain.Entities.ChemicalShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AcademicArticleId");

                    b.Property<DateTime>("Altered");

                    b.Property<decimal?>("Carbon1");

                    b.Property<decimal?>("Carbon2");

                    b.Property<decimal?>("Carbon3");

                    b.Property<decimal?>("Carbon4");

                    b.Property<decimal?>("Carbon5");

                    b.Property<decimal?>("Carbon6");

                    b.Property<DateTime>("Created");

                    b.Property<byte[]>("HSQC");

                    b.Property<decimal?>("Hydrogen1");

                    b.Property<decimal?>("Hydrogen2");

                    b.Property<decimal?>("Hydrogen3");

                    b.Property<decimal?>("Hydrogen4");

                    b.Property<decimal?>("Hydrogen5");

                    b.Property<decimal?>("Hydrogen6");

                    b.Property<int>("MonosaccharideUnitId");

                    b.Property<string>("Solvent");

                    b.Property<decimal?>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("AcademicArticleId");

                    b.HasIndex("Id");

                    b.HasIndex("MonosaccharideUnitId");

                    b.ToTable("ChemicalShifts");
                });

            modelBuilder.Entity("ChemicalShifts.Domain.Entities.MonosaccharideUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Altered");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Formula");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("MonosaccharideUnits");
                });

            modelBuilder.Entity("ChemicalShifts.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Altered");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChemicalShifts.Domain.Entities.ChemicalShift", b =>
                {
                    b.HasOne("ChemicalShifts.Domain.Entities.AcademicArticle", "AcademicArticle")
                        .WithMany("ChemicalShifts")
                        .HasForeignKey("AcademicArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ChemicalShifts.Domain.Entities.MonosaccharideUnit", "MonosaccharideUnit")
                        .WithMany("ChemicalShifts")
                        .HasForeignKey("MonosaccharideUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
